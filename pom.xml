<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>top.jf.repository</groupId>
	<artifactId>creator</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<!--集中管理子模块-->
    <modules>
		<module>creator-common</module>
		<module>creator-biz</module>
		<module>creator-facade</module>
        <module>creator-utils</module>
        <module>creator-test</module>
		<module>creator-webapp</module>
        <module>creator-core</module>
		<module>creator-persistent</module>
    </modules>
    <packaging>pom</packaging>

	<name>creator</name>
	<description>Demo project for Spring Boot</description>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.4.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<start-class>top.jf.controller.CreatorApplication</start-class>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>1.3.0</version>
		</dependency>

		<!--
       mybatis plus相关依赖
       -->
		<dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity</artifactId>
			<version>1.7</version>
		</dependency>
		<dependency>
			<groupId>com.baomidou</groupId>
			<artifactId>mybatis-plus</artifactId>
			<version>2.1.0</version>
		</dependency>
		<dependency>
			<groupId>cn.hutool</groupId>
			<artifactId>hutool-all</artifactId>
			<version>4.1.19</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!--
           devtools可以实现页面热部署（即页面修改后会立即生效，这个可以直接在application.properties文件中配置spring.thymeleaf.cache=false来实现），
           实现类文件热部署（类文件修改后不会立即生效），实现对属性文件的热部署。
           即devtools会监听classpath下的文件变动，并且会立即重启应用（发生在保存时机），注意：因为其采用的虚拟机机制，该项重启是很快的
        -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- tomcat 的支持.-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
			<!--<scope>provided</scope>-->
		</dependency>
	</dependencies>

	<!--<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>-->

	<!--mavan打包时跳过测试阶段-->
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.18.1</version>
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>
			<!--
             用于将应用打成可直接运行的jar（该jar就是用于生产环境中的jar） 值得注意的是，如果没有引用spring-boot-starter-parent做parent，
                       且采用了上述的第二种方式，这里也要做出相应的改动
             -->
		</plugins>
	</build>

	<!--<repositories>
		<repository>
			<id>maven-central</id>
			<name>maven-central</name>
			<url>
				http://39.108.117.188:8081/nexus/content/groups/public/
			</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
	</repositories>-->

	<!--指定正式版和快照版url及ID引用-->
	<!--<distributionManagement>
	  <repository>
		  <id>admin-release</id>
		  <name>User Project Release</name>
		  <url>http://localhost:8081/repository/maven-releases/</url>
	  </repository>

		<snapshotRepository>
			<id>admin-snapshots</id>
			<name>User Project SNAPSHOTS</name>
			<url>http://localhost:8081/repository/maven-snapshots/</url>
		 </snapshotRepository>
	</distributionManagement>-->
	<!--配置maven私服中央仓库-->
	<repositories>
		<repository>
			<id>maven-central</id>
			<name>maven-central</name>
			<url>http://192.168.10.198:8081/repository/maven-central/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
	</repositories>

	<distributionManagement>
		<snapshotRepository>
			<id>snapshots</id>
			<name>Nexus Snapshots</name>
			<url>http://192.168.10.198:8081/repository/maven-snapshots/</url>
		</snapshotRepository>
		<repository>
			<id>releases</id>
			<name>Nexus Releases</name>
			<url>http://192.168.10.198:8081/repository/maven-releases/</url>
		</repository>
	</distributionManagement>
</project>
